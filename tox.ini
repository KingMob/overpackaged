# можно проверить теги
# можно починить неправильные пакеты
# можно запаковать через pex, nuitka, pyoxidizer, appimage

[tox]
envlist = pyoxidizer, pex, nuitka, appimage, whl-check


[testenv]
setenv =
    DIST_DIR = {toxinidir}/dist
    SOURCE_DIR = {toxinidir}
    WHEEL_DIR = {toxinidir}/wheelhouse


[testenv:nuitka]
deps = nuitka
setenv =
    {[testenv]setenv}
    BUILD_DIR = {envdir}/.nuitka_build
allowlist_externals = {toxinidir}/packaging/nuitka/build.sh
commands = {toxinidir}/packaging/nuitka/build.sh


[testenv:pex]
deps = pex
setenv =
    {[testenv]setenv}
    BUILD_DIR = {envdir}/.pex_build
allowlist_externals = {toxinidir}/packaging/pex/build.sh
commands = {toxinidir}/packaging/pex/build.sh


[testenv:appimage]
deps = python-appimage
setenv =
    {[testenv]setenv}
    BUILD_DIR = {envdir}
allowlist_externals = {toxinidir}/packaging/appimage/build.sh
commands = {toxinidir}/packaging/appimage/build.sh


# TODO
[testenv:benchmark]
skip_install = true
setenv =
    {[testenv]setenv}
allowlist_externals = hyperfine
commands =
    hyperfine {env:DIST_DIR}/* --warmup 5 --export-markdown {envdir}/benchmark.md


[testenv:docker-build]
skip_install = true
setenv =
    {[testenv]setenv}
allowlist_externals =
    sudo
    {toxinidir}/docker/build.sh
commands =
    sudo {toxinidir}/docker/build.sh


[testenv:wheelhouse]
skip_install = true
setenv =
    {[testenv]setenv}
allowlist_externals =
    sudo
    {toxinidir}/docker/run.sh
commands =
    sudo -E {toxinidir}/docker/run.sh


[testenv:whl-check]
deps =
    wheel_filename
allowlist_externals = {toxinidir}/packaging/tools/whl-check.py
setenv =
    TAGS = any manylinux2014_x86_64 manylinux_2_5_x86_64
commands =
    {toxinidir}/packaging/tools/whl-check.py {env:WHEEL_DIR} {env:TAGS}

